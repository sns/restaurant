{"version":3,"sources":["Menu/Actions/ActionName.ts","Common/Store/index.ts","Common/Store/ActionCreator.ts","Common/Store/Utils.ts","Menu/Reducers/Menu.ts","Common/Store/RootReducer.ts","Common/Store/Store.ts","Common/Components/About.tsx","Menu/Components/Menu.tsx","Menu/Containers/Menu.ts","Common/Components/Home.tsx","Common/Components/Sidebar.tsx","index.tsx","Common/Utils/ObjectUtils.ts","ApiClient.ts","Menu/Services/MenuService.ts","Menu/Actions/Menu.ts"],"names":["ActionName","__webpack_exports__","_ActionCreator__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","_RootStateBase__WEBPACK_IMPORTED_MODULE_1__","o","_Store__WEBPACK_IMPORTED_MODULE_2__","createThunkAction","typesafe_actions__WEBPACK_IMPORTED_MODULE_0__","type","asyncAction","Object","es5_module","Reducers_Menu","state","action","t","pending","dist_es","Pending","fulfilled","Fulfilled","rejected","Rejected","getPromiseType","Menu","fetchMenuItems","menuItems","payload","CreateMenuItem","rootReducer","redux","configureStore","middlewares","es","enhancer","Components_About","react","[object Object]","Components_Menu","this","createNewMenuItem","props","createMenuItem","renderMenuItem","item","key","menuItemKey","name","price","loadMenuItems","items","map","x","onClick","value","Containers_Menu","dispatch","Actions_Menu","Components_Home","styles","navBarContainer","height","backgroundColor","display","justifyContent","alignItems","color","navBarItem","flexDirection","width","Components_Sidebar","BrowserRouter","style","Link","to","Route","path","exact","component","main","store","Store","react_dom","document","getElementById","isNullOrUndefined","object","undefined","defaultRequestInit","credentials","jsonHeaders","Accept","Content-Type","Pragma","fetchJsonRaw","url","init","input","window","fetch","assign","headers","fetchJson","queryParams","createQueryString","then","errorHandler","response","json","getJson","ok","console","error","status","statusText","params","keys","param","encodeURIComponent","toString","join","MenuService","actions","nextMenuItem","getState"],"mappings":"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","file":"static/js/main.5ec9be6b.chunk.js","sourcesContent":["enum ActionName {\n  FetchMenuItems = \"FETCH_MENU_ITEMS\",\n  CreateMenuItem = \"CREAT_MENU_ITEM\"\n}\n\nexport default ActionName;\n","export * from \"./ActionCreator\";\nexport * from \"./RootStateBase\";\nexport * from \"./Store\";\n","import {\n  createAction as typesafeCreateAction,\n  TypeGetter\n} from \"typesafe-actions\";\nimport { ThunkAction } from \"./index\";\n\n// Delegate to the typesafe-actions creator\nexport const createAction = typesafeCreateAction;\n\ntype AsyncAction<R> = (...params: any[]) => ThunkAction<R>;\nexport const createThunkAction = <R, A extends AsyncAction<R>>(\n  type: string,\n  asyncAction: A\n): A & TypeGetter<string> => {\n  return typesafeCreateAction(type, asyncAction as any);\n};\n\nexport const creators = {\n  createAction,\n  createThunkAction\n};\n\nexport default creators;\n","import * as typesafeActions from \"typesafe-actions\";\nimport { ActionType } from \"redux-promise-middleware\";\n\nexport const getType = typesafeActions.getType;\n\nexport function getPromiseType(t: any) {\n  const type = typesafeActions.getType(t);\n  return {\n    pending: `${type}_${ActionType.Pending}`,\n    fulfilled: `${type}_${ActionType.Fulfilled}`,\n    rejected: `${type}_P${ActionType.Rejected}`\n  };\n}\n","import ActionName from \"@src/Menu/Actions/ActionName\";\nimport { getPromiseType } from \"@src/Common/Store/Utils\";\nimport { actions } from \"@src/Menu/Actions/Menu\";\nimport MenuItem from \"@src/Menu/Models/MenuItem\";\n\nconst menu = (state = [], action: any) => {\n  switch (action.type) {\n    case getPromiseType(actions.fetchMenuItems).fulfilled:\n      const menuItems: MenuItem[] = action.payload;\n      return [...state, ...menuItems];\n    case ActionName.CreateMenuItem:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n\nexport default menu;\n","import { combineReducers } from \"redux\";\nimport menuItems from \"@src/Menu/Reducers/Menu\";\n\nexport const rootReducer = combineReducers({\n  menuItems\n});\n","import {\n  createStore,\n  applyMiddleware,\n  compose,\n  Middleware,\n  Unsubscribe,\n  Reducer,\n  Action\n} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport promise from \"redux-promise-middleware\";\n\nimport { rootReducer } from \"./RootReducer\";\nimport RootStateBase from \"./RootStateBase\";\n\n// import { getRoutes } from \"../Models/Routes\";\n\nexport type GetState = () => RootStateBase;\nexport type ThunkAction<R> = (dispatch: Dispatch, getState: GetState) => R;\n\nexport interface PromiseAction<R> extends Action {\n  payload: Promise<R>;\n  meta?: any;\n}\n\ninterface PromiseActionResultContainer<R> {\n  action: PromiseAction<R>;\n  value: R;\n}\n\nexport type PromiseActionResult<R> = Promise<PromiseActionResultContainer<R>>;\n\nexport interface Dispatch {\n  // Promise Action\n  <R>(asyncAction: PromiseAction<R>): PromiseActionResult<R>;\n\n  // Thunk Action\n  <R>(asyncAction: ThunkAction<R>): R;\n\n  // Action Literal\n  <A>(action: A): A;\n}\n\nexport interface Store {\n  dispatch: Dispatch;\n  getState(): RootStateBase;\n  subscribe(listener: () => void): Unsubscribe;\n  replaceReducer(nextReducer: Reducer<RootStateBase>): void;\n}\n\nexport function configureStore() {\n  // configure middlewares\n  const middlewares: Middleware[] = [thunk, promise];\n\n  if (process.env.NODE_ENV !== \"production\") {\n    const { createLogger } = require(\"redux-logger\");\n\n    // Collapse actions that don't have errors\n    const logger = createLogger({\n      collapsed: (getState, action, logEntry) => !logEntry.error\n    });\n\n    middlewares.push(logger);\n  }\n\n  // compose enhancers\n  const enhancer = compose(applyMiddleware(...middlewares));\n\n  const initialState = {};\n\n  // create store\n  return createStore(rootReducer, initialState, enhancer) as Store;\n}\n","import * as React from \"react\";\n\nexport class About extends React.Component {\n  render() {\n    return <div>About</div>;\n  }\n}\n\nexport default About;\n","import * as React from \"react\";\nimport MenuItem from \"@src/Menu/Models/MenuItem\";\n\nexport interface DispatchProps {\n  loadMenuItems: () => void;\n  createMenuItem: (name: string, price: number) => void;\n}\nexport interface StateProps {\n  items: MenuItem[];\n}\ntype Props = DispatchProps & StateProps;\nexport class Menu extends React.Component<Props> {\n  componentDidMount() {\n    this.props.loadMenuItems();\n  }\n\n  createNewMenuItem = () => {\n    this.props.createMenuItem(\"new one\", 17);\n  };\n\n  renderMenuItem = (item: MenuItem) => {\n    return <div key={item.menuItemKey}>{`${item.name} $${item.price}`}</div>;\n  };\n  render() {\n    return (\n      <div>\n        {this.props.items.map(x => this.renderMenuItem(x))}\n        <button onClick={this.createNewMenuItem} value=\"Create New Menu Item\" />\n      </div>\n    );\n  }\n}\n\nexport default Menu;\n","import Menu, { StateProps } from \"@src/Menu/Components/Menu\";\nimport { connect } from \"react-redux\";\nimport MenuActions from \"@src/Menu/Actions/Menu\";\nimport { RootStateBase } from \"@src/Common/Store\";\n\nconst mapStateToProps = (state: RootStateBase): StateProps => ({\n  items: state.menuItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadMenuItems: () => {\n    dispatch(MenuActions.fetchMenuItems());\n  },\n  createMenuItem: (name: string, price: number) =>\n    dispatch(MenuActions.createMenuItem(name, price))\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Menu);\n","import * as React from \"react\";\n\nexport class Home extends React.Component {\n  public render() {\n    return <div>Home</div>;\n  }\n}\n\nexport default Home;\n","import * as React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport About from \"./About\";\nimport Menu from \"@src/Menu/Containers/Menu\";\nimport Home from \"./Home\";\n\nconst styles = {\n  navBarContainer: {\n    height: 40,\n    backgroundColor: \"black\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: \"white\"\n  } as React.CSSProperties,\n  navBarItem: {\n    color: \"white\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: 300,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  } as React.CSSProperties\n};\nexport class Sidebar extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <div style={styles.navBarContainer}>\n            <Link to=\"/\" style={styles.navBarItem}>\n              Home\n            </Link>\n            <Link to=\"/menu\" style={styles.navBarItem}>\n              Menu\n            </Link>\n            <Link to=\"/about/\" style={styles.navBarItem}>\n              About\n            </Link>\n          </div>\n          <Route path=\"/\" exact={true} component={Home} />\n          <Route path=\"/menu\" exact={true} component={Menu} />\n          <Route path=\"/about/\" exact={true} component={About} />\n        </div>\n      </Router>\n    );\n  }\n}\nexport default Sidebar;\n","import * as dotenv from \"dotenv\";\nimport * as React from \"react\";\nimport * as ReactDom from \"react-dom\";\nimport Sidebar from \"@src/Common/Components/Sidebar\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./Common/Store\";\n// import { createStore } from \"redux\";\n// import { rootReducer } from \"@src/Common/Store/RootReducer\";\n// import { devToolsEnhancer } from \"redux-devtools-extension\";\n\ndotenv.config();\n\n// const store = createStore(rootReducer, devToolsEnhancer({}));\nconst store = configureStore();\nReactDom.render(\n  <Provider store={store}>\n    <Sidebar />\n  </Provider>,\n  document.getElementById(\"root\") as HTMLElement\n);\n","import { transform, isEqual, omitBy, isNull } from \"lodash\";\n\nexport const isNullOrUndefined = (object: any) =>\n  object === null || object === undefined;\n\nexport function difference(object: {}, base: object) {\n  return transform(object, (result, value, key) => {\n    if (!isEqual(value, base[key])) {\n      result[key] = value;\n    }\n  });\n}\n\nexport function removeNullProperties(object: object) {\n  return omitBy(object, isNull);\n}\n\nexport const ObjectUtils = {\n  difference,\n  removeNullProperties\n};\n\nexport default ObjectUtils;\n","import { isNullOrUndefined } from \"src/Common/Utils\";\n\nexport const defaultRequestInit: RequestInit = {\n  credentials: \"same-origin\"\n};\n\nexport const jsonHeaders = {\n  Accept: \"application/json\",\n  \"Content-Type\": \"application/json\",\n  Pragma: \"no-cache\"\n};\n\nexport interface ApiClientRequestInit extends RequestInit {\n  jsonBody?: any;\n  queryParams?: QueryStringProperties;\n}\n\n/**\n * Wrapper around the global fetch() api\n */\nexport function fetch(\n  input: RequestInfo,\n  init?: RequestInit\n): Promise<Response> {\n  return window.fetch(input, init);\n}\n\nexport function fetchJsonRaw<T>(\n  url: string,\n  init: RequestInit = {}\n): Promise<Response> {\n  return fetch(url, {\n    ...defaultRequestInit,\n    ...init,\n    headers: {\n      ...jsonHeaders,\n      ...init.headers\n    }\n  } as RequestInit);\n}\n\nexport function fetchJson<T>(\n  url: string,\n  init: ApiClientRequestInit = {}\n): Promise<T> {\n  if (init.queryParams) {\n    const queryString = createQueryString(init.queryParams);\n    url = `${url}?${queryString}`;\n  }\n\n  return fetchJsonRaw(url, init)\n    .then(errorHandler)\n    .then(response => response.json());\n}\n\nexport const getJson = fetchJson;\n\nexport function postJson<T>(\n  url: string,\n  init?: ApiClientRequestInit\n): Promise<T> {\n  const body =\n    init &&\n    (init.jsonBody || init.body) &&\n    JSON.stringify(init.jsonBody || init.body);\n\n  return fetchJson(url, {\n    method: \"POST\",\n    ...init,\n    body\n  });\n}\n\nexport function postJsonRaw(\n  url: string,\n  init?: ApiClientRequestInit\n): Promise<Response> {\n  const body =\n    init &&\n    (init.jsonBody || init.body) &&\n    JSON.stringify(init.jsonBody || init.body);\n  const requestInit = init && (init as RequestInit);\n\n  return fetchJsonRaw(url, {\n    method: \"POST\",\n    ...requestInit,\n    body\n  });\n}\n\nexport function putJson<T>(\n  url: string,\n  init?: ApiClientRequestInit\n): Promise<T> {\n  const body =\n    init &&\n    (init.jsonBody || init.body) &&\n    JSON.stringify(init.jsonBody || init.body);\n\n  return fetchJson(url, {\n    method: \"PUT\",\n    ...init,\n    body\n  });\n}\n\nexport function deleteJson<T>(\n  url: string,\n  init?: ApiClientRequestInit\n): Promise<T> {\n  const body =\n    init &&\n    (init.jsonBody || init.body) &&\n    JSON.stringify(init.jsonBody || init.body);\n\n  return fetchJson(url, {\n    method: \"DELETE\",\n    ...init,\n    body\n  });\n}\n\nexport function errorHandler(response: Response): Response {\n  if (!response.ok) {\n    console.error(\n      `API Error: ${response.url} -> ${response.status} ${response.statusText}`\n    );\n    throw response;\n  }\n\n  return response;\n}\n\nexport interface QueryStringProperties {\n  [paramName: string]: string | number | undefined;\n}\n\nexport function createQueryString(params: QueryStringProperties): string {\n  return Object.keys(params)\n    .map(name => {\n      const param = isNullOrUndefined(params[name]) ? \"\" : params[name];\n      return `${name}=${encodeURIComponent(param.toString())}`;\n    })\n    .join(\"&\");\n}\n\nconst apiClient = {\n  defaultRequestInit,\n  errorHandler,\n  fetchJsonRaw,\n  fetchJson,\n  jsonHeaders,\n  postJson,\n  postJsonRaw,\n  putJson,\n  deleteJson,\n  createQueryString\n};\n\nexport default apiClient;\n","import MenuItem from \"@src/Menu/Models/MenuItem\";\nimport { getJson } from \"@src/ApiClient\";\n\nexport interface MenuService {\n  fetchMenuItems: () => Promise<MenuItem[]>;\n}\n\nexport function fetchMenuItems(): Promise<MenuItem[]> {\n  return getJson(\"/fetchMenuItems\");\n}\n\nexport const menuService: MenuService = {\n  fetchMenuItems\n};\n\nexport default menuService;\n","import ActionName from \"@src/Menu/Actions/ActionName\";\nimport MenuItem from \"@src/Menu//Models/MenuItem\";\nimport { Dispatch, GetState, createThunkAction } from \"@Common/Store\";\nimport menuService from \"@src/Menu/Services/MenuService\";\n\nlet nextMenuItem = 0;\nexport const actions = {\n  fetchMenuItems: createThunkAction(\"FETCH_MENU_ITEMS\", () => {\n    return (dispatch: Dispatch, getState: GetState) => {\n      return dispatch({\n        type: \"FETCH_MENU_ITEMS\",\n        payload: menuService.fetchMenuItems()\n      });\n    };\n  }),\n  createMenuItem: (name: string, price: number) => ({\n    type: ActionName.CreateMenuItem,\n    payload: {\n      menuItemKey: nextMenuItem++,\n      name,\n      price\n    } as MenuItem\n  })\n};\n\nexport default actions;\n"],"sourceRoot":""}